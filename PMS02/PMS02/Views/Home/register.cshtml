@model PMS02.Models.User
@{
    ViewBag.Title = "Registeration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="modal fade" id="registerPop" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Register Now and Join US !!</h2>
            </div>
            <div class="modal-body">
                @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
            {

                if (ViewBag.Message != null)
                {
                        <div class="alert alert-success">
                            <strong>Success! </strong> @ViewBag.Message
                        </div>
                    }
                }
                else
                {
                    using (Html.BeginForm("register", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("Exist", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Job_Description, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.Job_Description, new SelectList(new[] { "Customer", "Project Manager", "Team Leader", "Junior Developer" }), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Job_Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.photoFile, new { @type = "file" })
                                    @Html.ValidationMessageFor(model => model.photoFile, "", new { @class = "text-danger" })
                                </div>  
                            </div>
                                
                            <div class="form-group">
                                <div class="col-md-offset-8 col-md-10">
                                    <input type="submit" value="Register" class="btn btn-success" />
                                </div>
                            </div>
                        </div>

                        if (ViewBag.Message != null)
                        {
                            <div class="alert alert-danger">
                                <strong>Error! </strong> @ViewBag.Message
                            </div>
                        }
                    }
                }
            </div>
            <div class="modal-footer">
                <div class="text-center text-success">
                    <strong>Already have an account ? @Html.ActionLink("Home", "login") Now</strong>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/pop_ups.js"></script>
}
@section Styles {
    <style type="text/css">
        .modal-content {
            width: 600px;
            margin-left: -10px;
        }

        .modal-header, h4, .close {
            background-color: #5cb85c;
            color: white !important;
            text-align: center;
            font-size: 30px;
        }

        .modal-footer {
            background-color: #f9f9f9;
        }
    </style>
}